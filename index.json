[{"categories":["cesium"],"content":"cesium是国外个一款框架，服务都假设在国外，访问比较慢，或者我们需要内网开发的时候就需要本地部署cesium\n准备   系统\nwindow10 64位\n  服务\nnginx-1.18.0\n  下载 cesium 是一款世界级的开源框架，基于Apache2.0 许可的开源，所以可以免费的用于商业和非商业用途。在同类型的框架中cesium不论在性能还是使用便利性上都是优秀的。国内有很多公司 针对cesium进行二次开发,形成自己的产品,像\u0026quot;超图\u0026quot;、\u0026ldquo;火星科技\u0026quot;等，目前这些二次开发的产品在市场上应用也很广泛。\n部署 cesium的迭代速度特别快，基本上每周一个小版本，每月一个大版本更新，提出的issue也能很快解决,所以不用担心cesium会突然不更新。\n测试","date":"2021-01-23","permalink":"/webgis/cesium/%E4%B8%8B%E8%BD%BD%E9%83%A8%E7%BD%B2/","series":null,"tags":["cesium"],"title":"下载部署"},{"categories":["cesium"],"content":"cesium 是一款开源的 webgis 开发框架,她支持 2D 2.5D 3D 的地理信息展示,基于 webgl 运行在浏览器,通过 cesium 你可以做出很多酷炫的应用,当然 cesium 不仅用于展示,在实际应用中 cesium 也有很大的作用。\n地位 cesium 是一款世界级的开源框架，基于Apache2.0 许可的开源，所以可以免费的用于商业和非商业用途。在同类型的框架中cesium不论在性能还是使用便利性上都是优秀的。国内有很多公司 针对cesium进行二次开发,形成自己的产品,像\u0026quot;超图\u0026quot;、\u0026ldquo;火星科技\u0026quot;等，目前这些二次开发的产品在市场上应用也很广泛。\n迭代 cesium的迭代速度特别快，基本上每周一个小版本，每月一个大版本更新，提出的issue也能很快解决,所以不用担心cesium会突然不更新。\n正确认知 在官网\r上有这么一句话Cesium is the open platform for software applications designed to unleash the power of 3D data.,大致意思是说cesium是为了更好的展示 3D 数据,这句话我也是学了arcgis才明白的,相对于专业性比较强的arcgis来说cesium在实用性和专业性上差了不少。这并不是说cesium做出来的东西不专业，只是在对数据要求比较严格的行业，例如地震，气象，建筑等领域，cesium要想达到专业精度的数据展示比较麻烦。在我有限的认知中，截止到现在cesium主要被用于数据可视化领域较多，专业的gis领域还是老大哥arcgis\n如何学习   基础地理知识\n 坐标 投影    基础的前端知识\n js es6 npm webpack    虽然cesium也能做 2D,但既然选择了cesium我相信还是做 3D 的比较多的,二维的完全可以使用openlayer或者leaflet更方便。既然做 3D 最好要对 3 维的知识有一点理解，上面我说的东西很简单，只要你有基本的前端基础，在查下资料很容易就能理解坐标和投影的概念。\n坚定信念 有很多人问我,身为一个前端却投向了webgis这么一个小众的方向,而且gis还有这么多的知识需要学习,真的值得吗?往往这个时候我就会告诉他,webgis大有可为,这句话绝对是有的放矢,现在这个市场上有很多前端一直写着静态页面,也有很多前端一直在写增删改查,这样的工作我觉得一点意思也没有。在现在这个前端市场，音视频方向 webgl方向 全栈方向 混合开发方向这几个领域的技术是很有挑战性的,我们可以尽量往这方面靠,而webgis正是属于webgl方向的一个小分支,只要我们耐下心来,认真学习钻研,一定会有所成就\n学习资源   官网 https://cesium.com/\n官网的文章是最理解cesium的,当然也是最不容易让人理解的地方\n  cesium 中文网 http://cesium.xin/\n国内最早接触cesium的一批人创建的博客,一部分文章收费了,一些基础的知识可以看看\n  cesium实验室 http://www.cesiumlab.com/\ncesiumlab数据处理分发软件，并开源earthSDK基于cesium二次开发包\n  超图 https://www.supermap.com/\n超图开发平台，基于cesium的二次开发框架以及示例展示\n  火星科技 http://mars3d.cn/\n基于cesium的二次开发的框架 mars3d，加密包开源，源码收费，有例子可以参考例子\n  闲谈 闲来无事逛了逛了 QQ,看到关于cesium的群里面的人已经很多了,想到当初自己刚接触cesium的时候,网络上资料少的可怜,自己英语又不好,为了实现某种效果头发一把一把的掉,看到现在学习这个框架的人越来越多,资料也是越来越丰富,感到很高兴,不由得生出自己也尽一份力的念头,所以就把自己使用cesium以来总结的知识点分享出来,大家共同学习共同进步。\n我也是菜鸟一个,文章旨在分享\n","date":"2021-01-15","permalink":"/webgis/cesium/%E5%89%8D%E8%A8%80/","series":null,"tags":["cesium"],"title":"前言"},{"categories":["Shortcode"],"content":"本文展示了如果使用 alert shortcode。\n1{{\u0026lt; alert \u0026#34;Message\u0026#34; [type] \u0026gt;}}  The parameter type is optional. Default to info.\n Info 1{{\u0026lt; alert \u0026#34;Info\u0026#34; \u0026gt;}} Info\r\rSuccess 1{{\u0026lt; alert \u0026#34;Success\u0026#34; success \u0026gt;}} Success\r\rWarning 1{{\u0026lt; alert \u0026#34;Warning\u0026#34; warning \u0026gt;}} Warning\r\rDanger 1{{\u0026lt; alert \u0026#34;Danger\u0026#34; danger \u0026gt;}} Danger\r","date":"2020-10-22","permalink":"/front-end/vue/alert/","series":["用户手册"],"tags":["Alert"],"title":"Alert Shortcode"},{"categories":["Shortcode"],"content":"本文展示了如果使用 alert shortcode。\n1{{\u0026lt; alert \u0026#34;Message\u0026#34; [type] \u0026gt;}}  The parameter type is optional. Default to info.\n Info 1{{\u0026lt; alert \u0026#34;Info\u0026#34; \u0026gt;}} Info\r\rSuccess 1{{\u0026lt; alert \u0026#34;Success\u0026#34; success \u0026gt;}} Success\r\rWarning 1{{\u0026lt; alert \u0026#34;Warning\u0026#34; warning \u0026gt;}} Warning\r\rDanger 1{{\u0026lt; alert \u0026#34;Danger\u0026#34; danger \u0026gt;}} Danger\r","date":"2020-10-22","permalink":"/posts/shortcodes/alert/","series":["用户手册"],"tags":["Alert"],"title":"Alert Shortcode"},{"categories":["Shortcode"],"content":"关于哔哩哔哩 shortcode 的详细使用说明。\n使用 1{{\u0026lt; bilibili \u0026#34;video id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/bilibili/","series":null,"tags":["哔哩哔哩"],"title":"Bilibili Shortcode"},{"categories":["Shortcode"],"content":"关于哔哩哔哩 shortcode 的详细使用说明。\n使用 1{{\u0026lt; bilibili \u0026#34;video id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/bilibili/","series":null,"tags":["哔哩哔哩"],"title":"Bilibili Shortcode"},{"categories":["Shortcode"],"content":"关于 CodePen shortcode 的详细说明。\n使用 1{{\u0026lt; codepen \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/codepen/","series":null,"tags":["CodePen"],"title":"CodePen Shortcode"},{"categories":["Shortcode"],"content":"关于 CodePen shortcode 的详细说明。\n使用 1{{\u0026lt; codepen \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/codepen/","series":null,"tags":["CodePen"],"title":"CodePen Shortcode"},{"categories":["Shortcode"],"content":"关于 JSFiddle shortcode 的详细说明。\n使用 1{{\u0026lt; jsfiddle \u0026#34;user/id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/jsfiddle/","series":null,"tags":["JSFiddle"],"title":"JSFiddle Shortcode"},{"categories":["Shortcode"],"content":"关于 JSFiddle shortcode 的详细说明。\n使用 1{{\u0026lt; jsfiddle \u0026#34;user/id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/jsfiddle/","series":null,"tags":["JSFiddle"],"title":"JSFiddle Shortcode"},{"categories":["Shortcode"],"content":"关于 JSRun shortcode 的详细说明。\n使用 1{{\u0026lt; jsrun \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/jsrun/","series":null,"tags":["JSRun"],"title":"JSRun Shortcode"},{"categories":["Shortcode"],"content":"关于 JSRun shortcode 的详细说明。\n使用 1{{\u0026lt; jsrun \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/jsrun/","series":null,"tags":["JSRun"],"title":"JSRun Shortcode"},{"categories":["arcgis"],"content":"arcgis for js下载部署\n安装 openlayers npm i ol -S\n引入需要的包 1import \u0026#39;ol/ol.css\u0026#39;; 2import Map from \u0026#39;ol/Map\u0026#39;; 3import TileLayer from \u0026#39;ol/layer/Tile\u0026#39;; 4import { transform } from \u0026#39;ol/proj.js\u0026#39;; 5import View from \u0026#39;ol/View\u0026#39;; 6import XYZ from \u0026#39;ol/source/XYZ\u0026#39;; 加载天地图在线瓦片地图  在线瓦片地址  1 矢量图： \u0026#34;http://t2.tianditu.com/DataServer?T=vec_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34; 2 影像图： \u0026#34;http://t2.tianditu.com/DataServer?T=img_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34; 3 地形图： \u0026#34;http://t2.tianditu.com/DataServer?T=ter_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34;   坐标系转换\n 默认坐标系为EPSG:3857，坐标转换成EPSG:4326，利用ol/proj.js的transform方法：\n   1let center = transform([10419419.755901294, 4222817.223109004], \u0026#39;EPSG:3857\u0026#39;, \u0026#39;EPSG:4326\u0026#39;);  利用接口XYZ实现加载瓦片  1var map = new Map({ 2 target: \u0026#39;map\u0026#39;, 3 layers: [ 4 new TileLayer({ 5 source: new XYZ({ 6 url: \u0026#39;http://t2.tianditu.com/DataServer?T=vec_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#39;, 7 }), 8 visible: true, 9 name: \u0026#39;basemap\u0026#39;, 10 }), 11 ], 12 view: new View({ 13 minZoom: 7, 14 maxZoom: 22, 15 center: center, 16 zoom: this.zoom, 17 projection: \u0026#39;EPSG:4326\u0026#39;, 18 }), 19}); ","date":"2020-10-22","permalink":"/webgis/arcgis/%E4%B8%8B%E8%BD%BD%E9%83%A8%E7%BD%B2/","series":null,"tags":["arcgis"],"title":"下载部署"},{"categories":["Shortcode"],"content":"关于优酷 shortcode 的详细说明。\n使用 1{{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/youku/","series":null,"tags":["Youku"],"title":"优酷 Shortcode"},{"categories":["Shortcode"],"content":"关于优酷 shortcode 的详细说明。\n使用 1{{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/youku/","series":null,"tags":["Youku"],"title":"优酷 Shortcode"},{"categories":["openlayer"],"content":"openlayer 加载天地图创建地图\n安装 openlayers npm i ol -S\n引入需要的包 1import \u0026#39;ol/ol.css\u0026#39;; 2import Map from \u0026#39;ol/Map\u0026#39;; 3import TileLayer from \u0026#39;ol/layer/Tile\u0026#39;; 4import { transform } from \u0026#39;ol/proj.js\u0026#39;; 5import View from \u0026#39;ol/View\u0026#39;; 6import XYZ from \u0026#39;ol/source/XYZ\u0026#39;; 加载天地图在线瓦片地图  在线瓦片地址  1 矢量图： \u0026#34;http://t2.tianditu.com/DataServer?T=vec_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34; 2 影像图： \u0026#34;http://t2.tianditu.com/DataServer?T=img_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34; 3 地形图： \u0026#34;http://t2.tianditu.com/DataServer?T=ter_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34;   坐标系转换\n 默认坐标系为EPSG:3857，坐标转换成EPSG:4326，利用ol/proj.js的transform方法：\n   1let center = transform([10419419.755901294, 4222817.223109004], \u0026#39;EPSG:3857\u0026#39;, \u0026#39;EPSG:4326\u0026#39;);  利用接口XYZ实现加载瓦片  1var map = new Map({ 2 target: \u0026#39;map\u0026#39;, 3 layers: [ 4 new TileLayer({ 5 source: new XYZ({ 6 url: \u0026#39;http://t2.tianditu.com/DataServer?T=vec_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#39;, 7 }), 8 visible: true, 9 name: \u0026#39;basemap\u0026#39;, 10 }), 11 ], 12 view: new View({ 13 minZoom: 7, 14 maxZoom: 22, 15 center: center, 16 zoom: this.zoom, 17 projection: \u0026#39;EPSG:4326\u0026#39;, 18 }), 19}); ","date":"2020-10-22","permalink":"/webgis/openlayer/create-map/","series":null,"tags":["openlayer"],"title":"创建地图"},{"categories":["openlayer"],"content":"openlayer 加载天地图\n安装 openlayers npm i ol -S\n引入需要的包 1import \u0026#39;ol/ol.css\u0026#39;; 2import Map from \u0026#39;ol/Map\u0026#39;; 3import TileLayer from \u0026#39;ol/layer/Tile\u0026#39;; 4import { transform } from \u0026#39;ol/proj.js\u0026#39;; 5import View from \u0026#39;ol/View\u0026#39;; 6import XYZ from \u0026#39;ol/source/XYZ\u0026#39;; 加载天地图在线瓦片地图  在线瓦片地址  1 矢量图： \u0026#34;http://t2.tianditu.com/DataServer?T=vec_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34; 2 影像图： \u0026#34;http://t2.tianditu.com/DataServer?T=img_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34; 3 地形图： \u0026#34;http://t2.tianditu.com/DataServer?T=ter_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#34;   坐标系转换\n 默认坐标系为EPSG:3857，坐标转换成EPSG:4326，利用ol/proj.js的transform方法：\n   1let center = transform([10419419.755901294, 4222817.223109004], \u0026#39;EPSG:3857\u0026#39;, \u0026#39;EPSG:4326\u0026#39;);  利用接口XYZ实现加载瓦片  1var map = new Map({ 2 target: \u0026#39;map\u0026#39;, 3 layers: [ 4 new TileLayer({ 5 source: new XYZ({ 6 url: \u0026#39;http://t2.tianditu.com/DataServer?T=vec_w\u0026amp;x={x}\u0026amp;y={y}\u0026amp;l={z}\u0026amp;tk=你的token\u0026#39;, 7 }), 8 visible: true, 9 name: \u0026#39;basemap\u0026#39;, 10 }), 11 ], 12 view: new View({ 13 minZoom: 7, 14 maxZoom: 22, 15 center: center, 16 zoom: this.zoom, 17 projection: \u0026#39;EPSG:4326\u0026#39;, 18 }), 19}); ","date":"2020-10-22","permalink":"/webgis/openlayer/%E5%8A%A0%E8%BD%BD%E5%A4%A9%E5%9C%B0%E5%9B%BE/","series":null,"tags":["openlayer"],"title":"加载天地图"},{"categories":["other"],"content":"安装部署hugo 原文\r不折腾点东西总觉得浑浑噩噩，折腾点东西搞得脑袋晕晕乎乎！\n折腾需求 为更新 https://edui.fun/\r导航站能随手些，造了 Gridea Theme WebStack\r。每次得源文件切换加载，但只为加几行代码，等等等；\n折腾一天，已实现直接在 GitHub master 添加代码，Github Actions 自动构建 Hugo 静态文件到 gh-pages 分支，外加同步 webhook 到自己的服务器。\n再也不用 git 来 git 去！\n上传 Hugo 源文件 （注：如已把 Hugo 程序 push 到 GitHub 上，直接跳过看下一步。）\n点击下载：https://github.com/lmm214/edui/archive/master.zip\rGitHub 上新建一个 repo，并只需保留以下文件上传到 master ，同时随手建个 gh-pages 分支：\n1├── archetypes 2│ └── default.md 3├── config.toml //Hugo 程序配置文件 4├── content 5│ ├── about.md 6├── data 7│ └── links.toml //导航数据，一个文件搞定 8└── themes 9 └── webstack //Hugo 主题 10 ├── layouts 11 │ └── home.html //主页 12 └── theme.toml //主题配置文件 添加 Github Actions 代码： 实现效果，直接网页上修改 data/links.toml 或任意文件，触发 Actions 自动化运行 Hugo 程序生成静态文件并推送到 gh-pages 分支上，等待几十秒可看到更新 https://lmm214.github.io/edui/\r具体操作：\n\r\r 点 https://github.com/settings/tokens\r新建一个，勾选 repo 和 workflow ,暂存；  \r 进项目 settings/secrets 新建标题为 personal_token ，内容是刚创建的 tokens ; 回项目，点 Actions -- New wordflow -- Set up a workflow yourself ，添加如下代码：  1name: Deploy Hugo # 任君喜欢 2 3on: 4 push: 5 branches: 6 - master # master 更新触发 7 8jobs: 9 build-deploy: 10 runs-on: ubuntu-18.04 11 steps: 12 - uses: actions/checkout@v1 13 14 - name: Setup Hugo 15 uses: peaceiris/actions-hugo@v2 16 with: 17 hugo-version: latest 18 19 - name: Build 20 run: hugo 21 22 - name: Deploy 23 uses: peaceiris/actions-gh-pages@v3 24 with: 25 personal_token: ${{ secrets.personal_token }} # personal_token 这里新建一个 https://github.com/settings/tokens 26 PUBLISH_BRANCH: gh-pages # 推送到当前 gh-pages 分支 27 PUBLISH_DIR: ./public # hugo 生成到 public 作为跟目录 28 commit_message: ${{ github.event.head_commit.message }} 👌 等，3、2、1，看看 Actions 顺利不，再看看 gh-pages 静态文件更新了不，最终打开 Pages ，祝贺！\n日志？主题？统统 GitHub 网页端搞定！当然，调试主题什么的还是建议本地进行。\n同步到服务器 完整源文件 【这里】\r，还有一段代码，实现同步推送到自己的服务器。\n1 - name: Webhook 2 uses: distributhor/workflow-webhook@v1 3 env: 4 webhook_url: ${{ secrets.WEBHOOK_URL }} 5 webhook_secret: ${{ secrets.WEBHOOK_SECRET }} WEBHOOK_URL 和 WEBHOOK_SECRET 是进项目 settings/secrets 新建添加，构建成宝塔面板的 webhook 链接（进面板-软件商店-装“webhook”），如：\nWEBHOOK_URL 设为：http://1.1.1.1/hook?access_key=密钥;\nWEBHOOK_SECRET 设为 \u0026amp;param=immmmm.com;这样合并成：\n1http://1.1.1.1/hook?access_key=密钥\u0026amp;param=immmmm.com ip 和域名需需改，同时宝塔后台的 webhooks 添加同步代码，需修改本地路径、github 项目路径，代码如下：\n1#!/bin/bash 2echo \u0026#34;\u0026#34; 3date --date=\u0026#39;0 days ago\u0026#39; \u0026#34;+%Y-%m-%d %H:%M:%S\u0026#34; 4echo \u0026#34;Start\u0026#34; 5 6#修改本地路径、github 项目路径 7gitPath=\u0026#34;/www/wwwroot/immmmm.com\u0026#34; 8gitHttp=\u0026#34;https://github.com/lmm214/immmmm.git\u0026#34; 9 10echo \u0026#34;Web站点路径：$gitPath\u0026#34; 11if [ -d \u0026#34;$gitPath\u0026#34; ]; then 12 cd $gitPath 13 if [ ! -d \u0026#34;.git\u0026#34; ]; then 14 echo \u0026#34;在该目录下克隆 git\u0026#34; 15 git clone -b gh-pages $gitHttp gittemp 16 mv gittemp/.git . 17 rm -rf gittemp 18 fi 19 git reset --hard gh-pages 20 git pull 21 chown -R www:www $gitPath 22 echo \u0026#34;End\u0026#34; 23 exit 24else 25 echo \u0026#34;该项目路径不存在\u0026#34; 26 echo \u0026#34;End\u0026#34; 27 exit 28fi 后话一点点 🤏 听闻 Hugo 大名也有好几个月，一直没尝试，之后也沉浸在 Gridea 中，不得不夸夸 Gridea 客户端体检真是优雅！\n但一直有一点点遗憾，更新只能启动客户端，点击【同步】。\n而 Hugo 生成静态文件摔 Hexo 几光年，部署安装无依赖，试用门槛较低。看着官方文档，程序、主题自定义也比较强悍。\n搜遍全网教程，要不就是太详细，一长串代码加注释，供大于求，要不略过。幸好，也算折腾成功！ ✌️\n感谢  官方 Hugo Templates： https://gohugo.io/templates/\r 中文系列教程翻译： https://www.rectcircle.cn/series/hugo/\r Hugo 中文帮助文档：https://hugo.aiaide.com/\r  ","date":"2020-10-22","permalink":"/other/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2hugo/","series":null,"tags":["hugo"],"title":"安装部署hugo"},{"categories":["Shortcode"],"content":"关于爱奇艺 shortcode 的详细说明。\n使用 1{{\u0026lt; iqiyi \u0026#34;vid\u0026#34; \u0026#34;tvid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/iqiyi/","series":null,"tags":["爱奇艺"],"title":"爱奇艺 Shortcode"},{"categories":["Shortcode"],"content":"关于爱奇艺 shortcode 的详细说明。\n使用 1{{\u0026lt; iqiyi \u0026#34;vid\u0026#34; \u0026#34;tvid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/iqiyi/","series":null,"tags":["爱奇艺"],"title":"爱奇艺 Shortcode"},{"categories":["Shortcode"],"content":"关于网易云音乐 Shortcode 的详细使用说明。\n使用 1{{\u0026lt; neteasemusic \u0026#34;id\u0026#34; [auto [type]] \u0026gt;}}    Parameter Description     auto The auto controls whether to autoplay. Boolean and optional, default to false.   type The type parameter is optional. Default to 2.    例子 \r","date":"2020-10-22","permalink":"/front-end/vue/neteasemusic/","series":null,"tags":["网易云音乐"],"title":"网易云音乐 Shortcode"},{"categories":["Shortcode"],"content":"关于网易云音乐 Shortcode 的详细使用说明。\n使用 1{{\u0026lt; neteasemusic \u0026#34;id\u0026#34; [auto [type]] \u0026gt;}}    Parameter Description     auto The auto controls whether to autoplay. Boolean and optional, default to false.   type The type parameter is optional. Default to 2.    例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/neteasemusic/","series":null,"tags":["网易云音乐"],"title":"网易云音乐 Shortcode"},{"categories":["Shortcode"],"content":"关于腾讯视频 shortcode 的详细说明。\n使用 1{{\u0026lt; tencentvideo \u0026#34;vid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/front-end/vue/tencentvideo/","series":null,"tags":["腾讯视频"],"title":"腾讯视频 Shortcode"},{"categories":["Shortcode"],"content":"关于腾讯视频 shortcode 的详细说明。\n使用 1{{\u0026lt; tencentvideo \u0026#34;vid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/tencentvideo/","series":null,"tags":["腾讯视频"],"title":"腾讯视频 Shortcode"},{"categories":null,"content":"\r\rDocument\r\r\r测试\r\r","date":"0001-01-01","permalink":"/playground/","series":null,"tags":null,"title":""},{"categories":["前端"],"content":"","date":"0001-01-01","permalink":"/front-end/vue/%E5%89%8D%E7%AB%AF/","series":["前端"],"tags":["前端"],"title":"前端"}]